import type { Meta, StoryObj } from "@storybook/react";

import { useState } from "react";

import { SelectContent } from "./ui/select-content";
import { SelectItem } from "./ui/select-item";
import { SelectRoot } from "./ui/select-root";
import { SelectTrigger } from "./ui/select-trigger";

/**
 * ## Select Component
 *
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Select - —ç—Ç–æ –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π:
 * - –ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–µ–º—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –≤—ã–±–æ—Ä–∞
 * - –ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è (—Ä–∞—Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
 * - –¢–µ–Ω–µ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
 * - –ü–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ controlled props
 *
 * ### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
 * - `SelectRoot` - –∫–æ—Ä–Ω–µ–≤–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * - `SelectTrigger` - –∫–Ω–æ–ø–∫–∞-—Ç—Ä–∏–≥–≥–µ—Ä (–Ω–∞—Å–ª–µ–¥—É–µ—Ç props –æ—Ç Button)
 * - `SelectContent` - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ –æ–ø—Ü–∏–π
 * - `SelectItem` - –æ—Ç–¥–µ–ª—å–Ω–∞—è –æ–ø—Ü–∏—è –≤ —Å–ø–∏—Å–∫–µ
 *
 * ### Accessibility
 * - `SelectItem` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç `role="option"` –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Å–µ–º–∞–Ω—Ç–∏–∫–∏
 * - –ö–ª–∏–∫ –≤–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
 * - –ó–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
 *
 * @example
 * ```tsx
 * const [isOpen, setIsOpen] = useState(false);
 * const [value, setValue] = useState("");
 *
 * <SelectRoot
 *   isOpen={isOpen}
 *   value={value}
 *   onOpenChange={setIsOpen}
 *   onValueChange={setValue}
 * >
 *   <SelectTrigger>Choose option</SelectTrigger>
 *   <SelectContent>
 *     <SelectItem value="option1">Option 1</SelectItem>
 *     <SelectItem value="option2">Option 2</SelectItem>
 *   </SelectContent>
 * </SelectRoot>
 * ```
 */
const meta = {
  title: "Components/Select",
  component: SelectRoot,
  parameters: {
    docs: {
      description: {
        component: `
–ü–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π Select-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã, –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Ç–µ–Ω–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

\`\`\`tsx
import {
  SelectRoot,
  SelectTrigger,
  SelectContent,
  SelectItem,
} from "@frey-ui/select";

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);
  const [value, setValue] = useState("");

  return (
    <SelectRoot
      isOpen={isOpen}
      value={value}
      onOpenChange={setIsOpen}
      onValueChange={setValue}
    >
      <SelectTrigger>Select an option</SelectTrigger>
      <SelectContent>
        <SelectItem value="apple">Apple üçé</SelectItem>
        <SelectItem value="banana">Banana üçå</SelectItem>
        <SelectItem value="cherry">Cherry üçí</SelectItem>
      </SelectContent>
    </SelectRoot>
  );
}
\`\`\`

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- **Controlled State**: –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —á–µ—Ä–µ–∑ \`isOpen\` –∏ \`value\`
- **Scroll Shadows**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–Ω–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –¥–ª–∏–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
- **Inverted Behavior**: –†–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç
- **Custom Indicators**: –ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–µ–º—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
- **Accessible**: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º role="option"
        `,
      },
    },
    a11y: {
      config: {
        rules: [
          {
            id: "color-contrast",
            enabled: true,
          },
          {
            id: "button-name",
            enabled: true,
          },
        ],
      },
    },
  },
  argTypes: {
    // Core Props
    isOpen: {
      control: "boolean",
      description:
        "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å `onOpenChange` –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
      table: {
        type: { summary: "boolean" },
        defaultValue: { summary: "false" },
      },
    },
    value: {
      control: "text",
      description:
        "–¢–µ–∫—É—â–µ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å `onValueChange`.",
      table: {
        type: { summary: "string" },
        defaultValue: { summary: '""' },
      },
    },
    onOpenChange: {
      action: "onOpenChange",
      description:
        "–ö–æ–ª–ª–±—ç–∫, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è. –ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ boolean.",
      table: {
        type: { summary: "(isOpen: boolean) => void" },
      },
    },
    onValueChange: {
      action: "onValueChange",
      description:
        "–ö–æ–ª–ª–±—ç–∫, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –ü–æ–ª—É—á–∞–µ—Ç value –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ SelectItem.",
      table: {
        type: { summary: "(value: string) => void" },
      },
    },

    // Variants
    size: {
      control: "select",
      options: ["m"],
      description:
        "–†–∞–∑–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ä–∞–∑–º–µ—Ä 'm'.",
      table: {
        type: { summary: '"m"' },
        defaultValue: { summary: '"m"' },
      },
    },

    // Behavior Props
    isInvertedBehavior: {
      control: "boolean",
      description:
        "–ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –±–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º—ã—Ö –º–µ–Ω—é –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤.",
      table: {
        type: { summary: "boolean" },
        defaultValue: { summary: "false" },
      },
    },

    // Scroll Shadow Props
    contentScrollShadowHeight: {
      control: "text",
      description:
        "–í—ã—Å–æ—Ç–∞ —Ç–µ–Ω–µ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ —Å–≤–µ—Ä—Ö—É/—Å–Ω–∏–∑—É). –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–µ –≤–∞–ª–∏–¥–Ω–æ–µ CSS-–∑–Ω–∞—á–µ–Ω–∏–µ (px, rem, em –∏ —Ç.–¥.).",
      table: {
        type: { summary: "string | number" },
        defaultValue: { summary: '"1rem"' },
      },
    },
    topScrollShadowThreshold: {
      control: { type: "number", min: 0, max: 100, step: 5 },
      description:
        "–ü–æ—Ä–æ–≥ –≤ –ø–∏–∫—Å–µ–ª—è—Ö –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏. –¢–µ–Ω—å –ø–æ—è–≤–ª—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –≤–µ—Ä—Ö–∞.",
      table: {
        type: { summary: "number" },
        defaultValue: { summary: "10" },
      },
    },
    bottomScrollShadowThreshold: {
      control: { type: "number", min: 0, max: 100, step: 5 },
      description:
        "–ü–æ—Ä–æ–≥ –≤ –ø–∏–∫—Å–µ–ª—è—Ö –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏. –¢–µ–Ω—å –ø–æ—è–≤–ª—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –¥–æ –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –º–µ–Ω—å—à–µ —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.",
      table: {
        type: { summary: "number" },
        defaultValue: { summary: "10" },
      },
    },

    // Style Props
    className: {
      control: "text",
      description:
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS-–∫–ª–∞—Å—Å—ã –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.",
      table: {
        type: { summary: "string" },
      },
    },
    selectedItemIndicator: {
      control: false,
      description:
        "–ö–∞—Å—Ç–æ–º–Ω—ã–π React-—ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑.",
      table: {
        type: { summary: "ReactNode" },
      },
    },

    // Children (–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ controls, –Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
    children: {
      control: false,
      description:
        "–î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: –¥–æ–ª–∂–Ω—ã –≤–∫–ª—é—á–∞—Ç—å SelectTrigger –∏ SelectContent —Å SelectItem –≤–Ω—É—Ç—Ä–∏.",
      table: {
        type: { summary: "ReactNode" },
      },
    },
  },
  decorators: [
    (StoryComponent) => (
      <div style={{ minHeight: "400px", padding: "2rem" }}>
        <StoryComponent />
      </div>
    ),
  ],
  tags: ["autodocs"],
} satisfies Meta<typeof SelectRoot>;

export default meta;

type Story = StoryObj<typeof meta>;

/**
 *
 * –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä Select —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ—Ä—É–∫—Ç–∞–º–∏.
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 */
export const Default: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select favorite fruit</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="Apple üçé">Apple üçé</SelectItem>
            <SelectItem value="Banana üçå">Banana üçå</SelectItem>
            <SelectItem value="Cherry üçí">Cherry üçí</SelectItem>
            <SelectItem value="Date üçá">Date üçá</SelectItem>
            <SelectItem value="Elderberry ü´ê">Elderberry ü´ê</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
  args: {
    isOpen: false,
    value: "",
    isInvertedBehavior: false,
    contentScrollShadowHeight: "1rem",
    topScrollShadowThreshold: 10,
    bottomScrollShadowThreshold: 10,
  },
};

/**
 *
 * Select —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
 * –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ñ–æ—Ä–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.
 */
export const WithInitialValue: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("Banana üçå");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select favorite fruit</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="Apple üçé">Apple üçé</SelectItem>
            <SelectItem value="Banana üçå">Banana üçå</SelectItem>
            <SelectItem value="Cherry üçí">Cherry üçí</SelectItem>
            <SelectItem value="Date üçá">Date üçá</SelectItem>
            <SelectItem value="Elderberry ü´ê">Elderberry ü´ê</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * Select —Å –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º - —Å–ø–∏—Å–æ–∫ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç.
 * –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤–∏–¥–∏–º—ã—Ö –º–µ–Ω—é, –±–æ–∫–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤.
 */
export const Inverted: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select favorite fruit</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="Apple üçé">Apple üçé</SelectItem>
            <SelectItem value="Banana üçå">Banana üçå</SelectItem>
            <SelectItem value="Cherry üçí">Cherry üçí</SelectItem>
            <SelectItem value="Date üçá">Date üçá</SelectItem>
            <SelectItem value="Elderberry ü´ê">Elderberry ü´ê</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * Select —Å –¥–ª–∏–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º –æ–ø—Ü–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–Ω–µ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.
 * –ü—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ —Ç–µ–Ω–∏ —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É.
 */
export const LongListWithScrollShadows: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select favorite fruit</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="Apple üçé">Apple üçé</SelectItem>
            <SelectItem value="Apricot üçë">Apricot üçë</SelectItem>
            <SelectItem value="Avocado ü•ë">Avocado ü•ë</SelectItem>
            <SelectItem value="Banana üçå">Banana üçå</SelectItem>
            <SelectItem value="Blackberry ü´ê">Blackberry ü´ê</SelectItem>
            <SelectItem value="Blueberry ü´ê">Blueberry ü´ê</SelectItem>
            <SelectItem value="Cherry üçí">Cherry üçí</SelectItem>
            <SelectItem value="Coconut ü••">Coconut ü••</SelectItem>
            <SelectItem value="Cranberry üî¥">Cranberry üî¥</SelectItem>
            <SelectItem value="Date üçá">Date üçá</SelectItem>
            <SelectItem value="Dragonfruit üêâ">Dragonfruit üêâ</SelectItem>
            <SelectItem value="Elderberry ü´ê">Elderberry ü´ê</SelectItem>
            <SelectItem value="Fig üü£">Fig üü£</SelectItem>
            <SelectItem value="Grape üçá">Grape üçá</SelectItem>
            <SelectItem value="Grapefruit üçä">Grapefruit üçä</SelectItem>
            <SelectItem value="Guava üü¢">Guava üü¢</SelectItem>
            <SelectItem value="Honeydew üçà">Honeydew üçà</SelectItem>
            <SelectItem value="Kiwi ü•ù">Kiwi ü•ù</SelectItem>
            <SelectItem value="Lemon üçã">Lemon üçã</SelectItem>
            <SelectItem value="Lime üü¢">Lime üü¢</SelectItem>
            <SelectItem value="Lychee üî¥">Lychee üî¥</SelectItem>
            <SelectItem value="Mango ü•≠">Mango ü•≠</SelectItem>
            <SelectItem value="Melon üçà">Melon üçà</SelectItem>
            <SelectItem value="Nectarine üçë">Nectarine üçë</SelectItem>
            <SelectItem value="Orange üçä">Orange üçä</SelectItem>
            <SelectItem value="Papaya üü†">Papaya üü†</SelectItem>
            <SelectItem value="Passionfruit üü£">Passionfruit üü£</SelectItem>
            <SelectItem value="Peach üçë">Peach üçë</SelectItem>
            <SelectItem value="Pear üçê">Pear üçê</SelectItem>
            <SelectItem value="Persimmon üü†">Persimmon üü†</SelectItem>
            <SelectItem value="Pineapple üçç">Pineapple üçç</SelectItem>
            <SelectItem value="Plum üü£">Plum üü£</SelectItem>
            <SelectItem value="Pomegranate üî¥">Pomegranate üî¥</SelectItem>
            <SelectItem value="Raspberry üî¥">Raspberry üî¥</SelectItem>
            <SelectItem value="Strawberry üçì">Strawberry üçì</SelectItem>
            <SelectItem value="Tangerine üçä">Tangerine üçä</SelectItem>
            <SelectItem value="Watermelon üçâ">Watermelon üçâ</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–Ω–µ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.
 * –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ —Ç–µ–Ω–∏ –∏ –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–µ –ø–æ—Ä–æ–≥–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è.
 */
export const CustomScrollShadowSettings: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select a country</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="USA üá∫üá∏">USA üá∫üá∏</SelectItem>
            <SelectItem value="UK üá¨üáß">UK üá¨üáß</SelectItem>
            <SelectItem value="Germany üá©üá™">Germany üá©üá™</SelectItem>
            <SelectItem value="France üá´üá∑">France üá´üá∑</SelectItem>
            <SelectItem value="Italy üáÆüáπ">Italy üáÆüáπ</SelectItem>
            <SelectItem value="Spain üá™üá∏">Spain üá™üá∏</SelectItem>
            <SelectItem value="Japan üáØüáµ">Japan üáØüáµ</SelectItem>
            <SelectItem value="China üá®üá≥">China üá®üá≥</SelectItem>
            <SelectItem value="India üáÆüá≥">India üáÆüá≥</SelectItem>
            <SelectItem value="Brazil üáßüá∑">Brazil üáßüá∑</SelectItem>
            <SelectItem value="Canada üá®üá¶">Canada üá®üá¶</SelectItem>
            <SelectItem value="Australia üá¶üá∫">Australia üá¶üá∫</SelectItem>
            <SelectItem value="Mexico üá≤üáΩ">Mexico üá≤üáΩ</SelectItem>
            <SelectItem value="Russia üá∑üá∫">Russia üá∑üá∫</SelectItem>
            <SelectItem value="South Korea üá∞üá∑">South Korea üá∞üá∑</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * –ù–µ—Å–∫–æ–ª—å–∫–æ Select-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–∑–æ–ª—è—Ü–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏.
 */
export const MultipleSelects: Story = {
  render: () => {
    const [isOpen1, setIsOpen1] = useState(false);
    const [selectedValue1, setSelectedValue1] = useState("");
    const [isOpen2, setIsOpen2] = useState(false);
    const [selectedValue2, setSelectedValue2] = useState("");

    return (
      <div style={{ display: "flex", gap: "2rem", flexWrap: "wrap" }}>
        <div style={{ width: "220px" }}>
          <SelectRoot
            isOpen={isOpen1}
            value={selectedValue1}
            onOpenChange={setIsOpen1}
            onValueChange={setSelectedValue1}
          >
            <SelectTrigger>Select fruit</SelectTrigger>
            <SelectContent topOffset={7}>
              <SelectItem value="Apple üçé">Apple üçé</SelectItem>
              <SelectItem value="Banana üçå">Banana üçå</SelectItem>
              <SelectItem value="Cherry üçí">Cherry üçí</SelectItem>
            </SelectContent>
          </SelectRoot>
        </div>

        <div style={{ width: "220px" }}>
          <SelectRoot
            isOpen={isOpen2}
            value={selectedValue2}
            onOpenChange={setIsOpen2}
            onValueChange={setSelectedValue2}
          >
            <SelectTrigger>Select vegetable</SelectTrigger>
            <SelectContent topOffset={7}>
              <SelectItem value="Carrot ü•ï">Carrot ü•ï</SelectItem>
              <SelectItem value="Broccoli ü•¶">Broccoli ü•¶</SelectItem>
              <SelectItem value="Tomato üçÖ">Tomato üçÖ</SelectItem>
            </SelectContent>
          </SelectRoot>
        </div>
      </div>
    );
  },
};

/**
 *
 * –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å —Ç—Ä–µ–º—è –æ–ø—Ü–∏—è–º–∏.
 * –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
 */
export const MinimalExample: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "200px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Choose...</SelectTrigger>
          <SelectContent>
            <SelectItem value="Option 1">Option 1</SelectItem>
            <SelectItem value="Option 2">Option 2</SelectItem>
            <SelectItem value="Option 3">Option 3</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * Select —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —à–∏—Ä–∏–Ω–æ–π.
 * –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º.
 */
export const WithCustomWidth: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "400px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select programming language</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="TypeScript">TypeScript</SelectItem>
            <SelectItem value="JavaScript">JavaScript</SelectItem>
            <SelectItem value="Python">Python</SelectItem>
            <SelectItem value="Rust">Rust</SelectItem>
            <SelectItem value="Go">Go</SelectItem>
            <SelectItem value="Java">Java</SelectItem>
            <SelectItem value="C++">C++</SelectItem>
            <SelectItem value="C#">C#</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};

/**
 *
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å–æ –≤—Å–µ–º–∏ props.
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Controls –ø–∞–Ω–µ–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
 */
export const Playground: Story = {
  render: () => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedValue, setSelectedValue] = useState("");

    return (
      <div style={{ width: "220px" }}>
        <SelectRoot
          isOpen={isOpen}
          value={selectedValue}
          onOpenChange={setIsOpen}
          onValueChange={setSelectedValue}
        >
          <SelectTrigger>Select an option</SelectTrigger>
          <SelectContent topOffset={7}>
            <SelectItem value="Option A">Option A</SelectItem>
            <SelectItem value="Option B">Option B</SelectItem>
            <SelectItem value="Option C">Option C</SelectItem>
            <SelectItem value="Option D">Option D</SelectItem>
            <SelectItem value="Option E">Option E</SelectItem>
            <SelectItem value="Option F">Option F</SelectItem>
            <SelectItem value="Option G">Option G</SelectItem>
            <SelectItem value="Option H">Option H</SelectItem>
          </SelectContent>
        </SelectRoot>
      </div>
    );
  },
};
